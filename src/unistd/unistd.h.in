/*
 * Copyright (c) 2022 Guilherme Janczak <guilherme.janczak@yandex.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#if !defined(H_OBSD_UNISTD)
#define H_OBSD_UNISTD

#pragma libobsd unistd.h #define LIBOBSD_INC_NEXT stdlib.h
#pragma libobsd unistd.h #include <libobsd_inc_next.h>

#include <stddef.h>

/*
 * pledge/unveil can't be ported, but they're also not strictly necessary.
 * This library provides shims for the functions; the macros should be optimized
 * away entirely, but the functions are in the library in case the programmer
 * does something weird.
 */
#pragma libobsd pledge #define pledge(unused1, unused2) ((int)0)
#pragma libobsd pledge int (pledge)(const char *, const char *);
#pragma libobsd unveil #define unveil(unused1, unused2) ((int)0)
#pragma libobsd unveil int (unveil)(const char *, const char *);

#endif /* !defined(H_OBSD_UNISTD) */
